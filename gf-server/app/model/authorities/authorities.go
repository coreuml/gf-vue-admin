// ============================================================================
// This is auto-generated by gf cli tool only once. Fill this file as you wish.
// ============================================================================

package authorities

import (
	"gf-server/app/model/menus"
	"github.com/gogf/gf/os/gtime"
)

type Authorities struct {
	AuthorityId   string         `orm:"authority_id,primary" json:"authority_id"`   // 角色ID
	AuthorityName string         `orm:"authority_name"       json:"authority_name"` // 角色名
	ParentId      string         `orm:"parent_id"            json:"parent_id"`      // 父角色ID
	CreateAt      *gtime.Time    `orm:"create_at"            json:"create_at"`      // 创建时间
	UpdateAt      *gtime.Time    `orm:"update_at"            json:"update_at"`      // 更新时间
	DeleteAt      *gtime.Time    `orm:"delete_at"            json:"delete_at"`      // 删除时间
	DataAuthority []Authorities  `json:"dataAuthority"`
	Children      []*Authorities `json:"children"`
	Menus         []menus.Entity `json:"menus"`
}

// RecordNotFound 根据条件判断数据是否存在
// 有数据返回false
// 没数据 true
func RecordNotFound(where ...interface{}) bool {
	return Model.RecordNotFound(where...)
}

func (m *arModel) RecordNotFound(where ...interface{}) bool {
	r, err := m.M.FindOne(where...)
	if r == nil && err == nil {
		return true
	}
	return false
}

//func InnerJoin(joinTable string, on string)  {
//	return Model.InnerJoin(joinTable string, on string)
//}
